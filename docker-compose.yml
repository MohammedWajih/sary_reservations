---

version: "3.3"

services:

  database:
    image: postgres
    container_name: sary_db_container
    restart: always
    volumes:
      - nginx_db_data:/var/lib/postgres
    ports:
      - "${DB_PORT}:5432"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - appnetwork

  web:
    image: nginx
    container_name: sary_web_container
    ports:
      - "${APP_PORT}:80"
    volumes:
      - ${APP_PATH}:${DOCUMENT_ROOT}
      - ./docker/nginx/config/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/config/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - appnetwork

  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    image: php:8.0-fpm
    container_name: sary_php_container
    volumes:
      - ${APP_PATH}:${DOCUMENT_ROOT}
      - ./docker/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./docker/php/ext-pgsql.ini:/usr/local/etc/php/conf.d/ext-pgsql.ini
    networks:
      - appnetwork



  adminer:
      image: adminer
      container_name: sary_adminerdb_container
      restart: always
      ports:
          - 8080:8080
      depends_on:
          - database
      networks:
        - appnetwork    

  redis:
    image: "redis:alpine"
    container_name: sary_redis_container
    ports:
      - "${FORWARD_REDIS_PORT:-6379}:6379"
    volumes:
      - "${APP_PATH}/redis:/data"
    networks:
      - appnetwork
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 5s

networks:
  appnetwork:
    # driver: "bridge"

volumes:
    nginx_db_data:
